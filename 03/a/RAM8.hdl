// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

        Not(out=high);

        Register(in=regin1, out=regout1, load=load1);
        Register(in=regin2, out=regout2, load=load2);
        Register(in=regin3, out=regout3, load=load3);
        Register(in=regin4, out=regout4, load=load4);
        Register(in=regin5, out=regout5, load=load5);
        Register(in=regin6, out=regout6, load=load6);
        Register(in=regin7, out=regout7, load=load7);
        Register(in=regin8, out=regout8, load=load8);

        DMux8Way(
            in=high,
            sel=address,
            a=dmuxa,
            b=dmuxb,
            c=dmuxc,
            d=dmuxd,
            e=dmuxe,
            f=dmuxf,
            g=dmuxg,
            h=dmuxh
        );




        And(a=load, b=dmuxa, out=load1);
        And(a=load, b=dmuxb, out=load2);
        And(a=load, b=dmuxc, out=load3);
        And(a=load, b=dmuxd, out=load4);
        And(a=load, b=dmuxe, out=load5);
        And(a=load, b=dmuxf, out=load6);
        And(a=load, b=dmuxg, out=load7);
        And(a=load, b=dmuxh, out=load8);




        And16(
            a[0]=dmuxa, 
            a[1]=dmuxa,
            a[2]=dmuxa,
            a[3]=dmuxa,
            a[4]=dmuxa,
            a[5]=dmuxa,
            a[6]=dmuxa,
            a[7]=dmuxa,
            a[8]=dmuxa,
            a[9]=dmuxa,
            a[10]=dmuxa,
            a[11]=dmuxa,
            a[12]=dmuxa,
            a[13]=dmuxa,
            a[14]=dmuxa,
            a[15]=dmuxa,
            b=in, 
            out=regin1
        );

        And16(
            a[0]=dmuxb, 
            a[1]=dmuxb,
            a[2]=dmuxb,
            a[3]=dmuxb,
            a[4]=dmuxb,
            a[5]=dmuxb,
            a[6]=dmuxb,
            a[7]=dmuxb,
            a[8]=dmuxb,
            a[9]=dmuxb,
            a[10]=dmuxb,
            a[11]=dmuxb,
            a[12]=dmuxb,
            a[13]=dmuxb,
            a[14]=dmuxb,
            a[15]=dmuxb,
            b=in, 
            out=regin2
        );

        And16(
            a[0]=dmuxc, 
            a[1]=dmuxc,
            a[2]=dmuxc,
            a[3]=dmuxc,
            a[4]=dmuxc,
            a[5]=dmuxc,
            a[6]=dmuxc,
            a[7]=dmuxc,
            a[8]=dmuxc,
            a[9]=dmuxc,
            a[10]=dmuxc,
            a[11]=dmuxc,
            a[12]=dmuxc,
            a[13]=dmuxc,
            a[14]=dmuxc,
            a[15]=dmuxc,
            b=in, 
            out=regin3
        );

        And16(
            a[0]=dmuxd, 
            a[1]=dmuxd,
            a[2]=dmuxd,
            a[3]=dmuxd,
            a[4]=dmuxd,
            a[5]=dmuxd,
            a[6]=dmuxd,
            a[7]=dmuxd,
            a[8]=dmuxd,
            a[9]=dmuxd,
            a[10]=dmuxd,
            a[11]=dmuxd,
            a[12]=dmuxd,
            a[13]=dmuxd,
            a[14]=dmuxd,
            a[15]=dmuxd,
            b=in, 
            out=regin4
        );

        And16(
            a[0]=dmuxe, 
            a[1]=dmuxe,
            a[2]=dmuxe,
            a[3]=dmuxe,
            a[4]=dmuxe,
            a[5]=dmuxe,
            a[6]=dmuxe,
            a[7]=dmuxe,
            a[8]=dmuxe,
            a[9]=dmuxe,
            a[10]=dmuxe,
            a[11]=dmuxe,
            a[12]=dmuxe,
            a[13]=dmuxe,
            a[14]=dmuxe,
            a[15]=dmuxe,
            b=in, 
            out=regin5
        );

        And16(
            a[0]=dmuxf, 
            a[1]=dmuxf,
            a[2]=dmuxf,
            a[3]=dmuxf,
            a[4]=dmuxf,
            a[5]=dmuxf,
            a[6]=dmuxf,
            a[7]=dmuxf,
            a[8]=dmuxf,
            a[9]=dmuxf,
            a[10]=dmuxf,
            a[11]=dmuxf,
            a[12]=dmuxf,
            a[13]=dmuxf,
            a[14]=dmuxf,
            a[15]=dmuxf,
            b=in, 
            out=regin6
        );

        And16(
            a[0]=dmuxg, 
            a[1]=dmuxg,
            a[2]=dmuxg,
            a[3]=dmuxg,
            a[4]=dmuxg,
            a[5]=dmuxg,
            a[6]=dmuxg,
            a[7]=dmuxg,
            a[8]=dmuxg,
            a[9]=dmuxg,
            a[10]=dmuxg,
            a[11]=dmuxg,
            a[12]=dmuxg,
            a[13]=dmuxg,
            a[14]=dmuxg,
            a[15]=dmuxg,
            b=in, 
            out=regin7
        );

        And16(
            a[0]=dmuxh, 
            a[1]=dmuxh,
            a[2]=dmuxh,
            a[3]=dmuxh,
            a[4]=dmuxh,
            a[5]=dmuxh,
            a[6]=dmuxh,
            a[7]=dmuxh,
            a[8]=dmuxh,
            a[9]=dmuxh,
            a[10]=dmuxh,
            a[11]=dmuxh,
            a[12]=dmuxh,
            a[13]=dmuxh,
            a[14]=dmuxh,
            a[15]=dmuxh,
            b=in, 
            out=regin8
        );



        Mux8Way16(
            sel=address,
            a=regout1,
            b=regout2,
            c=regout3,
            d=regout4,
            e=regout5,
            f=regout6,
            g=regout7,
            h=regout8,
            out=out
        );


}